name: Build, Publish and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack
        run: corepack enable

      - name: Cache Yarn
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Build project
        run: yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ${{ inputs.dockerfile }}
          load: true
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_URL }}/cms-frontend:latest
            ${{ secrets.DOCKER_REGISTRY_URL }}/cms-frontend:${GITHUB_SHA::8}

      # - name: Build Docker Image (No push yet)
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./
      #     file: ./.devops/docker/Dockerfile.frontend
      #     push: false
      #     load: true
       
#   deploy-frontend:
#     needs: publish-frontend
#     uses: ./.github/workflows/deploy.yml
#     with:
#       k8s_manifest_dir: ./k8s/frontend
#       image_name: cms-frontend
#       image_tag: ${{ needs.build-frontend.outputs.image_tag }}

#   build-golang:
#     uses: ./.github/workflows/reusable-build.yml
#     with:
#       context: ./golang-app
#       dockerfile: ./golang-app/Dockerfile

#   publish-golang:
#     needs: build-golang
#     uses: ./.github/workflows/reusable-publish.yml
#     with:
#       image_name: golang-app
#       context: ./golang-app
#       dockerfile: ./golang-app/Dockerfile
#       image_tag: ${{ needs.build-golang.outputs.image_tag }}

#   deploy-golang:
#     needs: publish-golang
#     uses: ./.github/workflows/reusable-deploy.yml
#     with:
#       k8s_manifest_dir: ./k8s/golang
#       image_name: golang-app
#       image_tag: ${{ needs.build-golang.outputs.image_tag }}
