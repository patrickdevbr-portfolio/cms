name: Build, Publish and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack
        run: corepack enable

      - name: Cache Yarn
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Build project
        run: yarn build

      - name: Debug build output
        run: ls -la apps/frontend/.next

      - name: Upload .next build
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            ./apps/frontend/.next

  build-frontend-image:
    needs: build-frontend
    uses: ./.github/workflows/build.yml
    with:
      dockerfile: ./.devops/docker/Dockerfile.frontend
  publish-frontend:
    needs: build-frontend-image
    uses: ./.github/workflows/publish.yml
    with:
      image_name: cms-frontend
      dockerfile: ./.devops/docker/Dockerfile.frontend
      image_tag: ${{ needs.build-frontend.outputs.image_tag }}

#   deploy-frontend:
#     needs: publish-frontend
#     uses: ./.github/workflows/deploy.yml
#     with:
#       k8s_manifest_dir: ./k8s/frontend
#       image_name: cms-frontend
#       image_tag: ${{ needs.build-frontend.outputs.image_tag }}

#   build-golang:
#     uses: ./.github/workflows/reusable-build.yml
#     with:
#       context: ./golang-app
#       dockerfile: ./golang-app/Dockerfile

#   publish-golang:
#     needs: build-golang
#     uses: ./.github/workflows/reusable-publish.yml
#     with:
#       image_name: golang-app
#       context: ./golang-app
#       dockerfile: ./golang-app/Dockerfile
#       image_tag: ${{ needs.build-golang.outputs.image_tag }}

#   deploy-golang:
#     needs: publish-golang
#     uses: ./.github/workflows/reusable-deploy.yml
#     with:
#       k8s_manifest_dir: ./k8s/golang
#       image_name: golang-app
#       image_tag: ${{ needs.build-golang.outputs.image_tag }}
